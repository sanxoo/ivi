#!/usr/bin/env python3

import argparse
import uuid
import json
import jobs

def show():
    for job in jobs.select():
        print(f"{job['_id']} {job['name']} {job['schedule']} {job['last_run']}")

def append():
    _id  = str(uuid.uuid4())
    name = "forest trail info"
    info = {
        "extract": {
            "url": "http://openapi.forest.go.kr/openapi/service/trailInfoService/gettrailservice",
            "params": {
                "ServiceKey": "NMXz8csGsBU0z3xf7Ut54KCV2anBkNSiWDLqnkb+L6apfHxoAoXYbz0jPNT/f9VX3R0ziEw/V2xhrosuOi2srw==",
            },
            "dating": {
            },
            "paging": {
                "param": "pageNo",
                "start_value": 1,
                "count_param": "numOfRows",
                "count_value": 5,
                "total_count_path": "body/totalCount",
            },
            "format": "xml",
            "item_path": "body/items/item",
        },
        "load": {
            "keys": ["baekduId", "baekdudistance", "baekdugbn", "baekdugbnname", "baekdurealdistance",
                     "baekdusectione", "baekdusections", "baekduspect", "baekduvia", "mntloca",
                     "mntnfile", "mntnnm"
            ],
            "file": ""
        },
    }
    info = json.dumps(info)
    schedule = "10,15 * * *"
    jobs.insert(_id=_id, name=name, info=info, schedule=schedule)
    show()

def pop():
    job_ = jobs.select()
    if not job_: return
    job = job_[-1]
    jobs.delete(job["_id"])
    print(f"{job['_id']} {job['name']} {job['schedule']} {job['last_run']}")
    print(f"{job['info']}")
    print(f"")
    show()

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("command", choices=["list", "append", "pop", "init"])
    args = parser.parse_args()
    if args.command == "list":
        return show()
    if args.command == "append":
        return append()
    if args.command == "pop":
        return pop()
    if args.command == "init":
        return jobs.init()

if __name__ == "__main__":
    main()

